--Crie uma visão que liste todos os funcionários que não são chefes.
CREATE VIEW NOT_MANAGERS AS
	SELECT EMPLOYEEID, FIRSTNAME, LASTNAME, TITLE
	FROM EMPLOYEES
	WHERE TITLE NOT LIKE '%Manager%' AND TITLE NOT LIKE '%President%'

--Faça uma visão que liste a quantidade de vendas que cada produto (o quanto cada produto foi vendido).
CREATE VIEW PRODUCTS_SALES AS
	SELECT P.PRODUCTID, P.PRODUCTNAME, COUNT(OD.ORDERID) AS SALES
	FROM PRODUCTS P
	LEFT JOIN [ORDER DETAILS] OD ON OD.PRODUCTID = P.PRODUCTID
	GROUP BY P.PRODUCTID, P.PRODUCTNAME

--Faça uma visão que liste os territórios e quantos vendedores estão vinculados a ele
CREATE VIEW TERRITORY_EMPLOYEES AS
	SELECT T.TERRITORYID, T.TERRITORYDESCRIPTION, COUNT(ET.EMPLOYEEID) AS EMPLOYEES
	FROM TERRITORIES T
	LEFT JOIN EMPLOYEETERRITORIES ET ON ET.TERRITORYID = T.TERRITORYID
	GROUP BY T.TERRITORYID, T.TERRITORYDESCRIPTION


--Faça uma visão que retorne o nome do cliente da venda de maior valor.
CREATE VIEW BIGGEST_SALE AS
	SELECT TOP 1 C.CONTACTNAME, SUM(OD.UNITPRICE * OD.QUANTITY) AS TOTAL_SALES
	FROM [ORDER DETAILS] OD
	JOIN ORDERS O ON OD.ORDERID = O.ORDERID
	JOIN CUSTOMERS C ON O.CUSTOMERID = C.CUSTOMERID
	GROUP BY C.CONTACTNAME
	ORDER BY TOTAL_SALES DESC

--Faça uma visão que liste os vendedores ordenados pela lucratividade.
CREATE VIEW SALESMAN_PROFIT AS
	SELECT E.FIRSTNAME, E.LASTNAME, CAST(SUM((OD.UNITPRICE * OD.QUANTITY) - OD.DISCOUNT) AS DECIMAL(10, 2)) AS PROFIT
	FROM EMPLOYEES E
	JOIN ORDERS O ON E.EMPLOYEEID = O.EMPLOYEEID
	JOIN [ORDER DETAILS] OD ON O.ORDERID = OD.ORDERID
	GROUP BY E.FIRSTNAME, E.LASTNAME
	ORDER BY PROFIT DESC


--Faça uma visão que retorne os produtos, seu fornecedor, sua categoria, seu
--preço e a informação de ele estar descontinuado ou não, para aqueles que possuem estoque.
CREATE VIEW AVAILABLE_PRODUCTS AS
	SELECT P.PRODUCTID, P.PRODUCTNAME, S.COMPANYNAME AS SUPPLIER, C.CATEGORYNAME AS CATEGORY, P.UNITPRICE,
		CASE WHEN P.DISCONTINUED = 1 THEN 'Yes' ELSE 'No' END AS DISCONTINUED
	FROM PRODUCTS P
	JOIN SUPPLIERS S ON P.SUPPLIERID = S.SUPPLIERID
	JOIN CATEGORIES C ON P.CATEGORYID = C.CATEGORYID
	WHERE P.UNITSINSTOCK > 0
